[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 10000
  metric_buffer_limit = 100000
  omit_hostname = true

[[inputs.file]]
  files = ["processing.log"]
  data_format = "grok"
  grok_timezone = "Europe/Berlin"
  grok_patterns = ['%{TIMESTAMP_ISO8601:timestamp:ts-"2006-01-02 15:04:05"} \[%{DATA:host:tag}\] \[%{DATA:thread:tag}\] %{LOGLEVEL:loglevel:drop}  %{GREEDYDATA:class:drop} - processed=%{NUMBER:processed:int}']

[[inputs.mem]]

[[inputs.win_perf_counters]]
  [[inputs.win_perf_counters.object]]
    ObjectName = "Processor"
    Instances = ["*"]
    Counters = ["% Idle Time", "% Interrupt Time", "% Privileged Time", "% User Time", "% Processor Time"]
    Measurement = "win_cpu"
    IncludeTotal=true

# Environment variables must exists that corresponds to the placeholders
[[outputs.influxdb_v2]]
  urls = ["$INFLUX_HOST"]
  token = "$INFLUX_TOKEN"
  organization = "$INFLUX_ORG"
  bucket = "$INFLUX_BUCKET"

# Usefull for debugging Telegraf configuration
#[[outputs.file]]
#  files = ["stdout"]

# Naive AMQP configuration using default properties
# docker run -d -p 15672:15672 -p 5672:5672 --hostname my-rabbit --name some-rabbit rabbitmq:3-management-alpine
# Login with http://localhost:15672 using guest/guest as credentials
# Create a queue and a bind that to the _telegraf_ exchange.
#[[outputs.amqp]]
#  brokers = ["amqp://localhost:5672"]
#  exchange = "telegraf"
#  exchange_type = "direct"
#  exchange_durability = "durable"
#  username = "guest"
#  password = "guest"
#  auth_method = "PLAIN"
#  delivery_mode = "persistent"
#  headers = {"database" = "telegraf", "retention_policy" = "default"}
